extend type Query {
  "Queries the host environment."
  host: Host!
}

"Information about the host execution environment."
type Host {
  """
  Accesses a directory on the host.
  """
  directory(
    """
    Location of the directory to access (e.g., ".").
    """
    path: String!,

    """
    Exclude artifacts that match the given pattern (e.g., ["node_modules/", ".git*"]).
    """
    exclude: [String!],

    """
    Include only artifacts that match the given pattern (e.g., ["app/", "package.*"]).
    """
    include: [String!]
  ): Directory!

  """
  Accesses a file on the host.
  """
  file(
    """
    Location of the file to retrieve (e.g., "README.md").
    """
    path: String!
  ): File!

  """
  Accesses a Unix socket on the host.
  """
  unixSocket(
    """
    Location of the Unix socket (e.g., "/var/run/docker.sock").
    """
    path: String!
  ): Socket!

  """
  Creates a tunnel forwarding traffic from the host to a service.
  """
  tunnel(
    "Service to send traffic from the tunnel."
    upstream: ServiceID!

    "Host IP:port for the tunnel to listen for traffic. Port 0 implies any available port."
    hostListenAddress: String!

    "Service port to send traffic to. Defaults to the first exposed port."
    upstreamPort: Int

    "Traffic protocol. Defaults to TCP."
    protocol: NetworkProtocol = TCP
  ): Service!

  """
  Creates a tunnel forwarding traffic to a specified address via the host.
  """
  reverseTunnel(
    "Host:Port to send traffic from the tunnel."
    upstreamAddress: String!

    "Port to expose from the tunnel service for downstream clients."
    servicePort: Int!

    "Traffic protocol. Defaults to TCP."
    protocol: NetworkProtocol = TCP
  ): Service!

  """
  Sets a secret given a user-defined name and the file path on the host, and returns the secret.
  The file is limited to a size of 512000 bytes.
  """
  setSecretFile(
    """
    The user defined name for this secret.
    """
    name: String!

    """
    Location of the file to set as a secret.
    """
    path: String!
  ): Secret!
}
